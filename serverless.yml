org: ruderud
app: rudbeckiaz-main
service: rudbeckiaz-main-minecraft
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    TZ: 'Asia/Seoul'
    DYNAMODB_ROOM_TABLE: rudbeckiaz-main-minecraft-room
    DYNAMODB_USER_TABLE: rudbeckiaz-main-minecraft-user
    DYNAMODB_CONNECTION_TABLE: rudbeckiaz-main-minecraft-connection
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - 'arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_ROOM_TABLE}'
            - 'arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_USER_TABLE}'
            - 'arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_CONNECTION_TABLE}'

functions:
  entryHandler:
    handler: dist/index.entryHandler
    events:
      - httpApi: '*'

  roomHandler:
    handler: dist/index.roomHandler
    events:
      - httpApi:
          method: '*'
          path: /room

  userHandler:
    handler: dist/index.userHandler
    events:
      - httpApi:
          method: '*'
          path: /user

  connectHandler:
    handler: dist/index.connectHandler
    events:
      - websocket: $connect

  disconnectHandler:
    handler: dist/index.disconnectHandler
    events:
      - websocket: $disconnect

  wsDefaultHandler:
    handler: dist/index.wsDefaultHandler
    events:
      - websocket: $default

resources:
  Resources:
    RoomDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_ROOM_TABLE}

    UserDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_USER_TABLE}

    ConnectionDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_CONNECTION_TABLE}

plugins:
  - serverless-esbuild
