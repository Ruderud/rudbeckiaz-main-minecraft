name: Deploy main branch

on:
  push:
    branches:
      - main
      
jobs:
  deploy:
    name: Upload to Amazon S3
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::111111111111:role/my-github-actions-role-test
        aws-region: us-east-1
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 sync . s3://my-s3-test-website-bucket
    - name: Configure AWS credentials from Production account
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::222222222222:role/my-github-actions-role-prod
        aws-region: us-west-2
    - name: Copy files to the production website with the AWS CLI
      run: |
        aws s3 sync . s3://my-s3-prod-website-bucket

# jobs:
#   deploy:
#     name: deploy
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     strategy:
#       matrix:
#         node-version: [18.x]
#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#     - run: yarn install
#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v3
#       with:
#         role-to-assume: ${{ secrets.MY_AWS_ROLE_ARN }}
#         aws-region: us-east-1
#     # - name: serverless config aws credentials
#     #   uses: serverless/github-action@v3.2
#     #   with:
#     #     args: --config credentials --provider aws --key 1234 --secret qwer
#     #   env:
#     #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#     #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#     - run: cd ~/.aws && ls -al
#     - run: yarn deploy:Prod
